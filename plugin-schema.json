{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Dplug plugin.json schema",
    "type": "object",

    "required": [ "CFBundleIdentifierPrefix",
                  "hasGUI",
                  "pluginName",
                  "pluginUniqueID",
                  "publicVersion",
                  "vendorName",
                  "vendorUniqueID",
                  "category" ],

    "properties": {
        "CFBundleIdentifierPrefix": {
            "description": "Mandatory prefix for macOS bundles.",
            "id": "/properties/CFBundleIdentifierPrefix",
            "type": "string"
        },
        "developerIdentity-osx" : {
            "description": "The signing identity used when code-signing for macOS. Mandatory for Mac installers.",
            "id": "/properties/developerIdentity-osx",
            "type": "string"
        },
        "iconPath": {
            "description": "Very optional path to an icon file, to be used for macOS bundles. Not sure if working.",
            "id": "/properties/commented-iconPath",
            "type": "string"
        },
        "installerPNGPath" : {
            "description": "The .png background path used for Mac installers. Optional.",
            "id": "/properties/installerPNGPath",
            "type": "string"
        },
        "hasGUI": {
            "description": "true if the plug-in has a GUI. Can be used to disabled the UI of a plug-in. This is especially practical when creating a new plug-in.",
            "id": "/properties/hasGUI",
            "type": "boolean"
        },
        "isSynth": {
            "description": "true if the plug-in is an instrument. Must match with the choosen category property.",
            "id": "/properties/isSynth",
            "type": "boolean",
            "default": "false"
        },
        "licensePath": {
            "description": "Optional path to a license file, to be bundled with binary releases.",
            "id": "/properties/licensePath",
            "type": "string"
        },
        "pluginName": {
            "description": "Full name of the plug-in vendor.",
            "id": "/properties/pluginName",
            "type": "string"
        },
        "pluginHomepage": {
            "description": "Web URL for plug-in homepage. Optional, used for VST3.",
            "id": "/properties/pluginHomepage",
            "type": "string"
        },
        "pluginUniqueID": {
            "description": "A four char code identifying your plug-in in the VST2 namespace. Nobody knows which one are available or not. When breaking save compatibility, you MUST issue a new plugin ID.",
            "id": "/properties/pluginUniqueID",
            "type": "string"
        },
        "publicVersion": {
            "description": "Public version of the plug-in, of the form major.minor.patch. The implicit meaning is that save compatibility is broken only for major versions.",
            "id": "/properties/publicVersion",
            "type": "string"
        },
        "receivesMIDI": {
            "description": "true if the plug-in reads MIDI input, can be for a synthesizer or an effect taking MIDI.",
            "id": "/properties/receivesMIDI",
            "type": "boolean",
            "default": "false"
        },
        "sendsMIDI": {
            "description": "true if the plug-in sends MIDI output. If a plugin sends MIDI, it MUST receives MIDI too.",
            "id": "/properties/sendsMIDI",
            "type": "boolean",
            "default": "false"
        },
        "userManualPath": {
            "description": "Optional path to a user manual file, to be bundled with binary releases.",
            "id": "/properties/userManualPath",
            "type": "string"
        },
        "vendorName": {
            "description": "The full name of the plug-in vendor.",
            "id": "/properties/vendorName",
            "type": "string"
        },
        "vendorUniqueID": {
            "description": "A four char code for the plug-in vendor.",
            "id": "/properties/vendorUniqueID",
            "type": "string"
        },
        "vendorSupportEmail": {
            "description": "An email address for support. Optional, used for VST3.",
            "id": "/properties/vendorSupportEmail",
            "type": "string"
        },
        "category": {
            "description": "The category of the plug-in. Helps to be listed more prominently in a DAW.",
            "id": "/properties/category",
            "type": "string",

            "enum": [

                "effectAnalysisAndMetering",
                "effectDelay",
                "effectDistortion",
                "effectDynamics",
                "effectEQ",
                "effectImaging",
                "effectModulation",
                "effectPitch",
                "effectReverb",
                "effectOther",

                "instrumentDrums",
                "instrumentSampler",
                "instrumentSynthesizer",
                "instrumentOther"
            ]
        },

       "windowsInstallerHeaderBmp": {
            "description": "Optional relative path to a 150x57 BMP, for use in the Windows installer.",
            "id": "/properties/windowsInstallerHeaderBmp",
            "type": "string"
        },

        "keyFile-windows": {
            "description": "A relative path to a Windows certificate, to be used for installer creation.",
            "id": "/properties/keyFile-windows",
            "type": "string"
        },

        "keyPassword-windows": {
            "description": "The password for the Windows certificate. Can be !PROMPT to be prompted on first use. Supports $VAR and !PROMPT syntax.",
            "id": "/properties/keyPassword-windows",
            "type": "string"
        },

        "timestampServerURL-windows": {
            "description": "Override the default timestamp server URL used by signtool.",
            "id": "/properties/timestampServerURL-windows",
            "type": "string"
        },

        "developerIdentity-windows": {
            "description": "The name of the certificate to use. This is an alternative to providing a private key and password directly. It is used for cloud code-signing. Takes priority over keyFile-windows.",
            "id": "/properties/developerIdentity-windows",
            "type": "string"
        },

        "certThumbprint-windows": {
            "description": "The footpring of the certificate to use. This is an alternative to providing a private key and password directly. It is used for cloud code-signing. Takes priority over keyFile-windows.",
            "id": "/properties/certThumbprint-windows",
            "type": "string"
        },

        "vendorAppleID": {
            "description": "An Apple ID used for notarization services.",
            "id": "/properties/vendorAppleID",
            "type": "string"
        },

        "appSpecificPassword-altool": {
            "description": "An App-Specific Password created for being able to run altool. Read Dplug's Notarization Guide for explanations. Supports $VAR syntax.",
            "id": "/properties/appSpecificPassword-altool",
            "type": "string"
        },

        "appSpecificPassword-stapler": {
            "description": "An App-Specific Password created for being able to run stapler. Read Dplug's Notarization Guide for explanations. Supports $VAR syntax.",
            "id": "/properties/appSpecificPassword-stapler",
            "type": "string"
        },

        "iLokAccount": {
            "description": "For PACE signing, the iLok account to access EDEN signing. Read Dplug's AAX Guide for explanations. Supports $VAR syntax.",
            "id": "/properties/iLokAccount",
            "type": "string"
        },

        "iLokPassword": {
            "description": "For PACE signing, the iLok password. Can be !PROMPT to be prompted on first use. Supports $VAR and !PROMPT syntax.",
            "id": "/properties/iLokPassword",
            "type": "string"
        },

        "wrapConfigGUID": {
            "description": "For PACE signing, the PACE wrap configuration ID to use. Create one in the PACE Central interface. Supports $VAR syntax.",
            "id": "/properties/wrapConfigGUID",
            "type": "string"
        }
    }
}
